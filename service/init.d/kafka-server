#!/bin/bash
#
# kafka-server
#
# chkconfig: 345 80 20
#
# description: kafka-server
# processname: java
#
### BEGIN INIT INFO
# Provides:          kafka-server
# Required-Start: $network $local_fs
# Required-Stop: 
# Should-Start: $named
# Should-Stop: 
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description: kafka-server init script
# Description: kafka-server init script
### END INIT INFO

# Source function library.
. /etc/init.d/functions
RETVAL=0

KAFKA_USER=kafka
PID_FILE="/var/run/kafka/kafka-server.pid"
KAFKA_HOME="/usr/lib/kafka"
KAFKA_CONF="/etc/kafka"
CLASSPATH="$KAFKA_HOME/libs/*"
SERVER_PROPERTIES="$KAFKA_CONF/server.properties"
LOG_DIR="/var/log/kafka"

install -d -m 0755 -o $KAFKA_USER -g $KAFKA_USER /var/run/kafka

# Source config
. /etc/kafka/kafka-env.sh

start() {
    PID=`cat "$PID_FILE" 2>/dev/null`
    if [ "$PID" != '' ]; then
        ps -fp $PID | grep $PID | grep kafka  > /dev/null 2>&1
        RETVAL=$?
        if [ $RETVAL -ne 0 ]; then
           echo "kafka is not running ..."
        else
            echo "kafka is running [$PID]"
            return 0
        fi
    fi
    rm -rf /tmp/kafka-logs/*
    KAFKA_CMD="java $KAFKA_HEAP_OPTS $KAFKA_JVM_PERFORMANCE_OPTS $KAFKA_GC_LOG_OPTS $KAFKA_JMX_OPTS $KAFKA_LOG4J_OPTS $KAFKA_OPTS -cp \"$CLASSPATH\" kafka.Kafka $SERVER_PROPERTIES"
    runuser --shell=/bin/bash --preserve-environment $KAFKA_USER --command="$KAFKA_CMD > $LOG_DIR/kafka-server.out 2>&1 & echo \$! > $PID_FILE"
    PID=`cat "$PID_FILE" 2>/dev/null`
    ps -fp $PID | grep $PID | grep kafka  > /dev/null 2>&1
    return $?
}

stop() {
    echo "Stopping kafka server..."
    PID=`cat "$PID_FILE" 2>/dev/null`
    if [ "$PID" != '' ]; then
        ps -fp $PID | grep $PID | grep kafka  > /dev/null 2>&1
        RETVAL=$?
        if [ $RETVAL -ne 1 ]; then
           kill $PID
        fi
	rm $PID_FILE
    fi
    return 0
}

status_kafka () {
    PID=`cat "$PID_FILE" 2>/dev/null`
    if [ "$PID" = '' ]; then
        return 1
    fi
    ps -fp $PID | grep $PID | grep kafka  > /dev/null 2>&1
    RETVAL=$?
    if [ $RETVAL -ne 0 ]; then
        echo "kafka is not running ..."
    else
        echo "kafka is running [$PID]"
    fi
    return $RETVAL
}

restart() {
        stop
        start
}

reload()  {
    restart
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status_kafka
        ;;
  restart)
        restart
        ;;
  reload)
        reload
        ;;
  *)
        echo $"Usage: $0 {start|stop|status|restart}"
        exit 2
esac

exit $?

